[versions]
spring-boot = "3.5.6"
spring-dependency-management = "1.1.7"
postgresql = "42.7.7"
flyway = "11.12.0"
springdoc = "2.8.13"
commons-lang3 = "3.19.0"
lombok = "1.18.40"
jooq = "3.20.0"
junit-platform = "1.12.2"
jakarta = "3.1.0"
logbook = "3.12.3"
mapstruct = "1.6.3"
micrometer = "1.5.4"
openapi = "7.16.0"
openapi-jackson = "0.2.6"
testcontainers-postgresql = "1.21.3"

[libraries]
# Spring Boot
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot"}
spring-boot-starter-jooq = { module = "org.springframework.boot:spring-boot-starter-jooq", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }

# Database
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }

# Documentation
springdoc-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

# Logging
logbook = { module = "org.zalando:logbook-spring-boot-starter", version.ref = "logbook" }

# MapStruct
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# Tracing
micrometer-tracing-bridge-otel = { module = "io.micrometer:micrometer-tracing-bridge-otel", version.ref = "micrometer" }

# Utilities
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
openapi-jackson = { module = "org.openapitools:jackson-databind-nullable", version.ref = "openapi-jackson" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# jOOQ
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }

# Jakarta
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta" }

# TestContainers
testcontainers-postrgesql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers-postgresql" }

# Testing
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jooq-codegen = { id = "org.jooq.jooq-codegen-gradle", version.ref = "jooq" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi" }